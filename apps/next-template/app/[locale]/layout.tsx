import './globals.css';

import type { Metadata } from 'next';

import { Analytics } from '@vercel/analytics/next';
import { SpeedInsights } from '@vercel/speed-insights/next';
import { NextIntlClientProvider } from 'next-intl';
import { getMessages } from 'next-intl/server';
import { Inter } from 'next/font/google';

import QueryClientProvider from '../../components/providers/query-client.provider';
import { Language, setRequestLocale } from '../../configs/i18n/i18n.config';

const inter = Inter({ subsets: ['latin'], variable: '--font-inter' });

type PageParams = {
  locale: Language;
};

export default async function RootLayout({ children, params }: { children: React.ReactNode; params: PageParams }) {
  setRequestLocale(params.locale);

  // Providing all messages to the client side is the easiest way to get started
  const messages = await getMessages({ locale: params.locale });

  return (
    <html lang="en">
      <body className={inter.variable + ' ' + inter.className}>
        <NextIntlClientProvider messages={messages}>
          <QueryClientProvider>{children}</QueryClientProvider>
        </NextIntlClientProvider>
        <footer>
          <SpeedInsights />
          <Analytics />
        </footer>
      </body>
    </html>
  );
}

export const metadata: Metadata = {
  applicationName: 'Next Template',
  authors: [
    {
      name: 'Hokki Suwanda',
      url: 'https://github.com/hokkyss',
    },
  ],
  description: 'Generated by create turbo',
  generator: 'Next.js',
  publisher: 'Vercel',
  title: 'Next Template',
};

export async function generateStaticParams() {
  return Object.values(Language).map<PageParams>((locale) => ({ locale }));
}
